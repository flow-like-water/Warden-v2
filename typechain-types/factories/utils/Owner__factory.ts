/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Owner, OwnerInterface } from "../../utils/Owner";

const _abi = [
  {
    inputs: [],
    name: "CallerNotPendingOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotBeOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousPendingOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newPendingOwner",
        type: "address",
      },
    ],
    name: "NewPendingOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61031e8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c57806379ba5097146100665780638da5cb5b1461006e578063e30c397814610097578063f2fde38b146100aa575b600080fd5b6100646100bd565b005b6100646100d1565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b60015461007b906001600160a01b031681565b6100646100b83660046102b8565b61015a565b6100c561020a565b6100cf6000610268565b565b6001546001600160a01b031633146100fc576040516305e05b4b60e31b815260040160405180910390fd5b6001546001600160a01b031661011181610268565b600180546001600160a01b03191690556040516000906001600160a01b038316907fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b908390a350565b61016261020a565b6001600160a01b03811661018957604051630962257960e11b815260040160405180910390fd5b6000546001600160a01b03828116911614156101b85760405163d5e889bf60e01b815260040160405180910390fd5b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b90600090a35050565b6000546001600160a01b031633146100cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102ca57600080fd5b81356001600160a01b03811681146102e157600080fd5b939250505056fea2646970667358221220d4fe144a907d78350014fcd554885d0cdc72a17f6e9cabe6216cc93b2536fd8464736f6c634300080a0033";

type OwnerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Owner__factory extends ContractFactory {
  constructor(...args: OwnerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Owner> {
    return super.deploy(overrides || {}) as Promise<Owner>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Owner {
    return super.attach(address) as Owner;
  }
  override connect(signer: Signer): Owner__factory {
    return super.connect(signer) as Owner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnerInterface {
    return new utils.Interface(_abi) as OwnerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Owner {
    return new Contract(address, _abi, signerOrProvider) as Owner;
  }
}
